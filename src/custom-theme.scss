
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

@include mat.core();

:root {
  @include mat.toolbar-overrides((container-background-color: slategray, container-text-color: white));
  .mat-mdc-button:hover,
  .mdc-button:hover,
  button.mat-mdc-button:hover {
    background-color: transparent !important;
  }


  // Eliminar el ripple effect al hacer hover
  .mat-mdc-button:hover .mat-mdc-button-persistent-ripple,
  .mat-mdc-button:hover .mat-mdc-button-ripple,
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar el overlay de hover
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::after {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar estados de Material
  .mat-mdc-button:hover .mat-mdc-focus-indicator,
  .mat-mdc-button:hover .mat-mdc-button-touch-target {
    display: none !important;
  }
}

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
  .mat-mdc-button:hover,
  .mdc-button:hover,
  button.mat-mdc-button:hover {
    background-color: transparent !important;
  }


  // Eliminar el ripple effect al hacer hover
  .mat-mdc-button:hover .mat-mdc-button-persistent-ripple,
  .mat-mdc-button:hover .mat-mdc-button-ripple,
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar el overlay de hover
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::after {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar estados de Material
  .mat-mdc-button:hover .mat-mdc-focus-indicator,
  .mat-mdc-button:hover .mat-mdc-button-touch-target {
    display: none !important;
  }
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;
  .mat-mdc-button:hover,
  .mdc-button:hover,
  button.mat-mdc-button:hover {
    background-color: transparent !important;
  }


  // Eliminar el ripple effect al hacer hover
  .mat-mdc-button:hover .mat-mdc-button-persistent-ripple,
  .mat-mdc-button:hover .mat-mdc-button-ripple,
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar el overlay de hover
  .mat-mdc-button .mat-mdc-button-persistent-ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::before,
  .mat-mdc-button:hover .mdc-button__ripple::after {
    opacity: 0 !important;
    background-color: transparent !important;
  }

  // Eliminar estados de Material
  .mat-mdc-button:hover .mat-mdc-focus-indicator,
  .mat-mdc-button:hover .mat-mdc-button-touch-target {
    display: none !important;
  }
  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
